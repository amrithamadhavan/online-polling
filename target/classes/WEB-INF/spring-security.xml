<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans.xsd 
  http://www.springframework.org/schema/context 
  http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/security 
 http://www.springframework.org/schema/security/spring-security.xsd">
	<http pattern="/resources/**" security="none" />
	<http auto-config="true">
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/**" access="permitAll()" />
		<form-login login-page="/login"
		
			authentication-success-forward-url="/"
			authentication-failure-forward-url="/login" />
		<logout logout-success-url="/"/>
		<csrf disabled="true" />
	</http>
	<!-- <beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password" factory-method = "getInstance" />-->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select uname,pwd,enabled from User where uname = ?"
				authorities-by-username-query="select uname,role from User where uname = ?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>